@use "../componentes/header.scss";
@use "../base/predeterminado.scss";
@use "../global/variables.scss";
@use "../global/funciones.scss";
@use "../componentes/footer.scss";
@use "../componentes/boton.scss";
@import "../../../node_modules/@fortawesome/fontawesome-free/css/all.min.css";

body {
    height: 100%; // Asegura que html y body ocupen toda la altura de la ventana
}

body {
    font-family: Arial, sans-serif;
    background-color: #F4F4F4;

    &::before {
        content: "";
        position: fixed; // Fija la imagen al viewport
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-size: cover;
        background-position: center;
        background-repeat: no-repeat;
        filter: blur(4px); // Ajusta el valor según el nivel de difuminado deseado
        z-index: -1; // Asegura que la imagen esté detrás del contenido
    }

    &::after {
        content: "";
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.3); // Color de superposición semi-transparente
        z-index: -1; // Asegura que esta capa también esté detrás del contenido
    }
}

main {
    flex: 1; // Hace que el contenido principal ocupe todo el espacio disponible
    display: flex;
    justify-content: center; // Centra horizontalmente el formulario
    align-items: center; // Centra verticalmente el formulario
    min-height: 80vh; // Asegura que haya suficiente espacio para centrar
}

.calendar-container {
    width: 80%;
    max-width: 1200px;
    background-size: cover;
    background-position: center;
    padding: 20px;
    border-radius: 10px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    text-align: center;
}

.week-header {
    display: inline-block;
    /* Ajusta el tamaño del contenedor al contenido */
    text-align: center;
    color: white;
    font-size: 24px;
    text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5);
    /* Sombra de texto para mayor contraste */
    background-color: rgba(255, 255, 255, 0.1);
    /* Fondo semitransparente */
    padding: 10px;
    /* Espaciado interno */
    border-radius: 8px;
    /* Bordes redondeados */
    box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);
    /* Sombra suave */
}


.days-container {
    display: flex;
    justify-content: space-between;
    flex-wrap: wrap; // Permite que los días se envuelvan si no caben en una fila
    gap: 10px; // Espaciado entre los días
}

.day {
    width: calc(100% / 7 - 20px);
    background-color: rgba(255, 255, 255, 0.7);
    border-radius: 5px;
    padding: 20px;
    text-align: center;
    box-sizing: border-box; // Incluye padding en el cálculo del ancho

    // Usamos Flexbox para centrar el contenido dentro de .day
    display: flex;
    flex-direction: column; // Alinea los elementos en columna
    justify-content: center; // Centra verticalmente
    align-items: center; // Centra horizontalmente
    gap: 10px; // Espaciado entre los elementos dentro de .day

}

.day-name {
    font-size: 18px;
    color: black;
}
.start-button {
    @include boton.red-button;
    cursor: pointer;

    /* Estilo adicional para centrar perfectamente el botón */
    width: 100%; /* Hace que el botón ocupe todo el ancho disponible dentro del contenedor */
    max-width: 200px; /* Limita el ancho máximo del botón (ajusta según sea necesario) */
    text-align: center; /* Alinea el texto del botón al centro */
    justify-content: center;
    font-weight: bold;

    /* Estilo de fondo */
    background-color: #D83C2A; /* Fondo más oscuro para mayor contraste */
    border: 2px solid #B93520; /* Borde más oscuro */
    border-radius: 8px; /* Borde redondeado */
    transition: background-color 0.3s ease, transform 0.3s ease; /* Animación para cambio de color y transformaciones */

    /* Sombra adicional */
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.3); /* Sombra más pronunciada */
    
    /* Efecto hover para destacar el botón */
    &:hover {
        background-color: #B93520; /* Cambia el color de fondo cuando el usuario pasa el ratón por encima */
        transform: translateY(-2px); /* Efecto de levantamiento al pasar el ratón */
    }

    /* Estilo del texto: blanco sobre fondo oscuro */
    & > article {
        color: #FFFFFF; /* Texto blanco para alto contraste */
        text-shadow: 
            -2px -2px 0 rgba(0, 0, 0, 0.8), 
            2px -2px 0 rgba(0, 0, 0, 0.8), 
            -2px 2px 0 rgba(0, 0, 0, 0.8), 
            2px 2px 0 rgba(0, 0, 0, 0.8); /* Contorno negro más pronunciado */
    }
}


.check-icon {
    font-size: 20px;
    /* Tamaño del ícono */
    color: green;
    /* Color del ícono */
}

@media (min-width: 1800px) {
    .calendar-container {
        width: 90%; // Aumenta el ancho del contenedor
        max-width: none; // Elimina el límite máximo de ancho
        padding: 40px; // Aumenta el padding interno
    }

    .week-header {
        font-size: 36px; // Aumenta el tamaño del texto del encabezado
        margin-bottom: 30px;
    }

    .day {
        width: calc(100% / 7 - 40px); // Aumenta el espacio entre los días
        padding: 40px; // Aumenta el padding interno
        font-size: 20px; // Aumenta el tamaño del texto
    }

    .day-name {
        font-size: 24px; // Aumenta el tamaño del nombre del día
    }

    .start-button {
        font-size: 28px; // Aumenta el tamaño del texto del botón
        padding: 15px 30px; // Aumenta el padding del botón
    }


}

// Media Query para pantallas entre 501px y 767px
@media (min-width: 501px) and (max-width: 1300px) {
    .days-container {
        flex-wrap: wrap; // Permite que los días se envuelvan
        gap: 10px; // Espaciado entre los días
    }

    .day {
        flex: 1 1 calc(50% - 20px); // Cada día ocupará la mitad del ancho, menos un margen
        min-width: 100px; // Establece un ancho mínimo para evitar que se hagan demasiado pequeños
        max-width: calc(50% - 20px); // Limita el ancho máximo para mantener consistencia
    }




}

// Media Query para pantallas menores a 500px
@media (max-width: 500px) {
    .calendar-container {
        width: 100%; // Asegúrate de que ocupe todo el ancho disponible
    }

    .days-container {
        flex-direction: column; // Coloca los días en una columna
        align-items: center; // Centra los días horizontalmente
        gap: 20px; // Espaciado entre los días
    }

    .day {
        width: 100%; // Cada día ocupará todo el ancho del contenedor
    }



}

@media (max-width: 479px) {
    body {
        &::before {
            background-image: image-set(map-get(map-get(variables.$home-backgrounds, xss), avif) type("image/avif"),
                    map-get(map-get(variables.$home-backgrounds, xss), webp) type("image/webp"),
                    map-get(map-get(variables.$home-backgrounds, xss), jpg) type("image/jpeg"));
        }
    }
}

@media (min-width: 480px) and (max-width: 767px) {
    body {
        &::before {
            background-image: image-set(map-get(map-get(variables.$home-backgrounds, mobile), avif) type("image/avif"),
                    map-get(map-get(variables.$home-backgrounds, mobile), webp) type("image/webp"),
                    map-get(map-get(variables.$home-backgrounds, mobile), jpg) type("image/jpeg"));
        }
    }
}

@media (min-width: 768px) and (max-width: 1199px) {
    body {
        &::before {
            background-image: image-set(map-get(map-get(variables.$home-backgrounds, tablet), avif) type("image/avif"),
                    map-get(map-get(variables.$home-backgrounds, tablet), webp) type("image/webp"),
                    map-get(map-get(variables.$home-backgrounds, tablet), jpg) type("image/jpeg"));
        }
    }
}

@media (min-width: 1200px) and (max-width: 2559px) {
    body {
        &::before {
            background-image: image-set(map-get(map-get(variables.$home-backgrounds, small), avif) type("image/avif"),
                    map-get(map-get(variables.$home-backgrounds, small), webp) type("image/webp"),
                    map-get(map-get(variables.$home-backgrounds, small), jpg) type("image/jpeg"));
        }
    }
}

@media (min-width: 2560px) {
    body {
        &::before {
            background-image: image-set(map-get(map-get(variables.$home-backgrounds, large), avif) type("image/avif"),
                    map-get(map-get(variables.$home-backgrounds, large), webp) type("image/webp"),
                    map-get(map-get(variables.$home-backgrounds, large), jpg) type("image/jpeg"));
        }
    }
}